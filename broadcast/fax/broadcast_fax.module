<?php
/******************************************************************
* Copyright Â© 2012 ICT Innovations, All Rights Reserved           *
* License: GNU AGPL V 3.0                                         *
* Developed By: Falak Nawaz                                       *
*             : Nasir Iqbal                                       *
*             : Tahir Almas                                       *
* Website : http://www.ictinnovations.com/                        *
* Contact : support@ictinnovations.com, info@ictinnovations.com   *
******************************************************************/

// $Id: broadcast_fax.module,v 1.0 2011/12/12 18:08:59 ictinnovations Exp $


/**
 * Implementation of hook_menu().
 *
 */
 
function broadcast_fax_menu() {
  $items = array();

  $items['admin/broadcast/fax'] = array(
    'title'            => 'Fax Settings',
    'description'      => 'Configure Fax Broadcasting behavior',
    'page callback'    => 'drupal_get_form',
    'page arguments'   => array('broadcast_fax_admin_settings'),
    'access callback'  => 'broadcast_access',
    'access arguments' => array('broadcast fax system admin'),
    'type'             => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implementation of hook_permission().
 *
 * Defines access permissions that may be assigned to roles and used to restrict
 * access on fax module.
 */
function broadcast_fax_permission() {
  return array(
    'broadcast fax system admin' => array('title'=> 'broadcast fax system admin')
  );
}

/**
 * Loader function for individual document.
 * Used in broadcast module as a hook for invoke all
 * @param $document_id
 *   An int containing the ID of a document.
 * @return
 *   A single document in array format, or FALSE if none matched the incoming ID.
 */
function broadcast_fax_campaign_message_load($campaign_id, $campaign) {
  
  if(!empty($campaign['campaign_type']) && $campaign['campaign_type']=='fax'){
    $sql    = "SELECT * FROM {broadcast_campaign_document} WHERE campaign_id = :campaign_id";
    $result = db_query($sql, array(':campaign_id'=>$campaign_id));
    if ($campaign_document = $result->fetchAssoc()) {
      $selectedDocument = array(
        'document'  => $campaign_document['document_id'],
      );
      return $selectedDocument;
    } else {
      drupal_set_message(t('Specified Document does not exist! or you have not proper permissions!'), 'error');
      return FALSE;
    }
  }
}

// used to load a first application id for given campaign id
function broadcast_fax_load($campaign_id) {  
  $sql    = "SELECT * FROM {broadcast_campaign_application} WHERE campaign_id = :campaign_id order by campaign_application_id";
  $result = db_query($sql, array(':campaign_id'=>$campaign_id));
  if($app = $result->fetchAssoc()) {
    return $app['campaign_application_id'];
  } else { 
    drupal_set_message(t('Specified applications does not exist! or you have not proper permissions!'), 'error');
    return FALSE;
  }
}

/**
 * Hook for supported types.
 * Displayed when Fax campaign option while creating new campaign
 *
 */
function broadcast_fax_supported_types()
{
  return array('fax'=> t('Fax Campaign'));
}

/**
 * Build the fax message editing form.
 *
 * @ingroup forms
 * @see broadcast_fax_campaign_message_submit()
 */
function broadcast_fax_campaign_message($form_state, $campaign = array()) {

  if(!empty($campaign['campaign_type']) && $campaign['campaign_type']=='fax'){
    // It's safe to use on both an empty array, and an incoming array with full or partial data.
    $campaign += array(
      'document' => '',
    );
    
    // If we're editing an existing fax campaign, we'll add a value field to the form
    // containing the fax's unique ID.
    if (!empty($campaign['document_id'])) {
      $form['document_id'] = array(
        '#type'        => 'value',
        '#value'       => $campaign['document_id'],
      );
    }
    if (!empty($campaign['campaign_document_id'])) {
      $form['campaign_document_id'] = array(
        '#type'        => 'value',
        '#value'       => $campaign['campaign_document_id'],
      );
    }
    
    $form['fax'] = array(
      '#type'          => 'fieldset',
      '#title'         => t('Fax Message'),
    );

    $optionsDoc = broadcast_document_option();
    $form['fax']['document'] = array(
      '#type'          => 'select',
      '#title'         => t('Fax Document'),
      '#options'       => $optionsDoc, 
      '#default_value' => $campaign['document'],
    );
   
    $form['fax']['campaign_type'] = array(
    '#type'          => 'value',
    '#default_value' => 'fax',
    );

    return $form;
  }
}

function broadcast_fax_campaign_message_validate($form, $form_state) {
  // no validation required
  if(!empty($campaign['campaign_type']) && $campaign['campaign_type']=='fax'){
    return true;
  }
}

/**
 * Inserts a new link in broadcast_campaign_document, or updates an existing one.
 *
 * @param $campaign
 *   A document link to be saved. If $campaign['campaign_id'] is set, the document link will be updated.
 *   Otherwise, a new link will be inserted into the database.
 * @return
 *   The saved document link, with its ID set.
 */
function broadcast_fax_campaign_message_submit($form, $form_state, $campaign) {
  global $user;
  if(!empty($campaign['campaign_type']) && $campaign['campaign_type']=='fax'){
    $fax = $form_state['values'];
    // Save assigned document to this campaign. but first delete existing document in case of update
    broadcast_fax_campaign_message_delete($campaign);
    $aSelectedDoc = array(
      'document_id' => $fax['document'],
      'campaign_id'  => $campaign['campaign_id'],
    );
    drupal_write_record('broadcast_campaign_document', $aSelectedDoc);
    // then write applications and action of selected recording
    writeFaxApplication($campaign['campaign_id'], $fax['document']);
  }
}

function writeFaxApplication($campaign_id, $document_id) {
  
  $app_id = dialplan_application_add($campaign_id, 'start', array());
  $app_fax = dialplan_application_add($campaign_id, 'send_fax', array('document' => $document_id));
  $app_id  = dialplan_application_add($campaign_id, 'hangup');
  
}

/**
 * Delete a document link, according to given campaign ID.
 *
 * @param $campaign
 *   An array of campaign containing the ID of campaign and document link.
 */
function broadcast_fax_campaign_message_delete($campaign) {
  
  if(!empty($campaign['campaign_type']) && $campaign['campaign_type']=='fax'){
    // if deleted campaign was linked with some document, remove that link
    $sql = 'DELETE FROM {broadcast_campaign_document} WHERE campaign_id = :campaign_id';
    db_query($sql, array(':campaign_id'=>$campaign['campaign_id']));
    
    // Also delete applications and actions
// disable IVR releated code
/*    $sql = "SELECT * FROM {broadcast_campaign_application} WHERE campaign_id = :campaign_id";
    $result = db_query($sql, array(':campaign_id'=>$campaign['campaign_id']));
    while ($campaign_ivr = $result->fetchAssoc()) {
      $sql = 'DELETE FROM {broadcast_campaign_action} WHERE campaign_application_id = :campaign_application_id';
      db_query($sql, array(':campaign_application_id'=>$campaign_ivr['campaign_application_id']));  
    }
    $sql = 'DELETE FROM {broadcast_campaign_application} WHERE campaign_id = :campaign_id';
    db_query($sql, array(':campaign_id'=>$campaign['campaign_id'])); */
  }
}

function broadcast_fax_admin_settings() {
  $form['fax'] = array(
    '#type'  => 'fieldset',
    '#title' => t('fax Settings')
  );
  $form['fax']['broadcast_fax_default_gateway'] = array(
    '#type'          => 'select',
    '#title'         => t("Default fax Gateway"),
    '#options'       => _broadcast_fax_get_gateways(),
    '#default_value' => variable_get('broadcast_fax_default_gateway', 'broadcast_dummy'),
    '#description'   => t('Select which gateway will be used for outgoing fax'),
  );
  
  $form['voice']['broadcast_fax_default_directory'] = array(
    '#type'          => 'textfield',
    '#title'         => t("Fax Directory Path"),
    '#default_value' => variable_get('broadcast_fax_default_directory', '/usr/ictdialer/sites/default/files/broadcast/document'),
    '#description'   => t('Directory path where all the fax documents are available (Do not add a trailing \'/\')'),
  );

  
  return system_settings_form($form);
}

/********************************************************
*             FUNCTION FOR BACKGROUND TASK              *
********************************************************/

/* Enumerate all fax gateways
*****************************/

function _broadcast_fax_get_gateways() {
  $gateways = array();

  foreach (module_list() as $module) {
    $function = $module . '_supported_services';
    if (function_exists($function)) {
      $services = $function();
      if (isset($services['fax'])) {
        $gateways[$module] = $services['fax'];
      }
    }
  }

  return $gateways;
}

