#!/usr/bin/php -q
<?php
/******************************************************************
* Copyright Â© 2012 ICT Innovations, All Rights Reserved           *
* License: GNU AGPL V 3.0                                         *
* Developed By: Nasir Iqbal                                       *
*             : Tahir Almas                                       *
* Modified By:  Falak Nawaz                                       *
* Website : http://www.ictinnovations.com/                        *
* Contact : support@ictinnovations.com, info@ictinnovations.com   *
******************************************************************/

/**
 * ICT Broadcast System
 * 
 * Drupal 7
 *
 * @package   Broadcast
 * @author    Nasir Iqbal <nasir@ictinnovations.com>
 * @copyright 2009 ICT Innovations Pakistan
 * @link      http://www.ictinnovations.com/ict_broadcast
 */


/* Include and initilize Drupal
*******************************/
// just to statisfy an empty veriable error
$_SERVER['REMOTE_ADDR'] = '127.0.0.1';   
$_SERVER['REQUEST_METHOD'] = 'GET';
// Change path to drupal home dir
//chdir(dirname(__FILE__).'/../../');
define('DRUPAL_ROOT', '/usr/ictdialer');
require_once DRUPAL_ROOT . '/includes/bootstrap.inc';
drupal_bootstrap(DRUPAL_BOOTSTRAP_FULL);

/* Setup signal handlers
************************/
pcntl_signal(SIGTERM, "INT_handler"); // shutdown
pcntl_signal(SIGHUP,  "INT_handler"); // restart


/* Get command line arguments
*****************************/
$campaign_id = $argv[1];              // campaign which should be started
$user_uid    = $argv[2];              // user id

$user = user_load(array('uid' => $user_uid));
if (!$user) {
  watchdog('campaign ' . $campaign_id, "Invalid user id!", array(), WATCHDOG_ERROR);
}

/*****************************************************************************
*                     START OF CAMPAIGN BROADCASTING                         *
*****************************************************************************/
watchdog('campaign ' . $campaign_id, "##[ New Campaign started ]##", array(), WATCHDOG_INFO);

// GET DESIRED RECORD FROM CAMPAIGN TABLE
$camp  = broadcast_campaign_load($campaign_id);
if (!is_array($camp)) {
  watchdog('campaign ' . $campaign_id, "No such campaign found!", array(), WATCHDOG_ERROR);
}

$billing_do = false;
if (function_exists('ictsp_billing_balance')) {
  if (ictsp_billing_balance($user->uid) === false) {
    // if no further balace then stop campaign
    INT_handler(SIGTERM);
  }
  $billing_do = true;
}

$repeat_start     = $camp['repeat_done'] + 1;

// Get function name for request service
$deliver_function = 'broadcast_' . $camp['campaign_type'] .  '_deliver';

// Update Campaign status
$camp['status']       = CAMPAIGN_RUNNING;
$camp['campaign_pid'] = getmypid();
drupal_write_record('broadcast_campaign', $camp, 'campaign_id');


/* Repeat a Campaign many times as mentioned with "repeat_total"
****************************************************************/
for ($try_no = $repeat_start; $try_no <= $camp['repeat_total']; $try_no++) {

    // Get all / remaining number in contact list
    // TODO: remove duplicat contacts, duplicate contacts which has diffirenet contact_id
    $SQL  = "SELECT DISTINCT {broadcast_contact}.contact_id
             FROM {broadcast_contact} JOIN 
               ({broadcast_contact_link} JOIN {broadcast_campaign_contact}
                 ON {broadcast_contact_link}.contact_group_id = {broadcast_campaign_contact}.contact_group_id)
               ON {broadcast_contact}.contact_id = {broadcast_contact_link}.contact_id
             WHERE {broadcast_campaign_contact}.campaign_id = :campaign_id 
               AND {broadcast_contact}.contact_id >= :contact_id 
             ORDER BY {broadcast_contact}.contact_id ASC";
    $rsPhone = db_query($SQL, array(':campaign_id'=>$campaign_id, ':contact_id'=>$camp['contact_index']));
    if (!$rsPhone) {
      watchdog('campaign ' . $campaign_id, "no contacts found in campaign", array('%numbers' => $rsPhone->fetchField()), WATCHDOG_WARNING);
      continue;
    }

    /* Repeat a Campaign many times as mentioned with repeat_total
    ****************************************************************/
    while ($contact_record = $rsPhone->fetchAssoc()) {
        $camp['contact_done'] = $camp['contact_done'] + 1;

        // Wait some time if in Campaign it is requested todo so
        usleep($camp['contact_delay'] * 1000000);

        // Collect and Insert deliver results into campaign log (status, data)
        $deliver_result = array();
        $deliver_result['campaign_id'] = $campaign_id;
        $deliver_result['contact_id']  = $contact_record['contact_id'];
        $deliver_result['start_at']    = time();
        $deliver_result['status']      = 0;
        $deliver_result['units']       = $deliver_result['units'] != null ? $deliver_result['units'] : 0;
        $deliver_result['data']        = $deliver_result['data'] != null ? $deliver_result['data'] : 0;
        drupal_write_record('broadcast_campaign_log', $deliver_result);

        /* Deliver message to relevant service.
        ***************************************/
        $result = $deliver_function($camp['campaign_id'], 
                                    $contact_record['contact_id'], 
                                    $deliver_result['campaign_log_id']);

    		if ($result !== FALSE) {
            $deliver_result['units']  = $result;
      	  $deliver_result['status'] = 'pending';
    		} else {
    		  $deliver_result['units']  = 0;
      	  $deliver_result['status'] = 'failed';
    		}
  		
        // set deliver status into campaign log
        drupal_write_record('broadcast_campaign_log', $deliver_result, 'campaign_log_id');

        // Update Campaign to reflect current number of contacts done
        // new code start: To fix start and resume issue
        if ($camp['contact_index'] < $contact_record['contact_id']) {
          $camp['contact_index'] = $contact_record['contact_id'];
        } else {
          unset($camp['contact_index']);
        }
        // new code end
        drupal_write_record('broadcast_campaign', $camp, 'campaign_id');
        
        // do billing stuff
        if ($billing_do) {
    	  if (ictsp_billing_charge($user->uid, $deliver_result['units'], $campaign_id) === false) {
			// if no further balance then stop campaign
            INT_handler(SIGTERM);
    	  }
        }
    }

    // Update Campaign for tries which has been done
    // And reset CONTACT INDEX when a loop of campaign is completed
    $camp['contact_index'] = 0;
    $camp['repeat_done']   = $try_no;
    drupal_write_record('broadcast_campaign', $camp, 'campaign_id');
}

// Update Campaign status
$camp['status']       =   CAMPAIGN_DONE;
$camp['campaign_pid'] = 0;
drupal_write_record('broadcast_campaign', $camp, 'campaign_id');
watchdog('campaign ' . $campaign_id, "##[ End of Campaign : All Done ]##", array(), WATCHDOG_INFO);

exit() or die();
/*****************************************************************************
*                       END OF CAMPAIGN BROADCASTING                         *
*****************************************************************************/

function INT_handler($sig_no) {
  global $camp, $campaign_id;

  watchdog('campaign ' . $campaign_id, "Signal # %number received", array('%number' => $sig_no), WATCHDOG_INFO);

  switch ($sig_no) {
    case SIGHUP:
    case SIGTERM:
      // handle stop / pause tasks
      // Update Campaign status and stop the Campaign
      $camp['status']       = CAMPAIGN_PAUSED;
      $camp['campaign_pid'] = 0;
      drupal_write_record('broadcast_campaign', $camp, 'campaign_id');
      watchdog('campaign ' . $campaign_id, "##[ Campaign has Paused ]##", array(), WATCHDOG_INFO);
      exit() or die();
      break;

    default:
      // handle all other signals, do nothing
  }
}
?>
